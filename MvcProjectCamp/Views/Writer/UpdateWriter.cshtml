@model EntityLayer.Concrete.Writer
@{
    ViewBag.Title = "UpdateWriter";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Yazar Düzenleme Sayfası</h2>
<form class="container" method="post">
    @Html.HiddenFor(x => x.WriterID)

    @Html.Label("Yazar Adı")
    @Html.TextBoxFor(x => x.WriterName, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterName)
    <br />
    @Html.Label("Yazar Soyadı")
    @Html.TextBoxFor(x => x.WriterSurname, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterSurname)
    <br />
    @Html.Label("Yazar Mail")
    @Html.TextBoxFor(x => x.WriterMail, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterMail)
    <br />
    @Html.Label("Yazar Şifre")
    @Html.TextBoxFor(x => x.WriterPassword, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterPassword)
    <br />
    @Html.Label("Yazar Görsel Link")
    @Html.TextBoxFor(x => x.WriterImage, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterImage)
    <br />
    @Html.Label("Yazar Ünvan")
    @Html.TextBoxFor(x => x.WriterTitle, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterTitle)
    <br />
    @Html.Label("Yazar Hakkında")
    @Html.TextBoxFor(x => x.WriterAbout, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterAbout)
    <br />
    <button class="btn btn-outline-info">Yazar Güncelle</button>
</form>

